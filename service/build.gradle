plugins {
	id 'org.springframework.boot' version '3.1.4'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'java'
	id 'com.google.cloud.tools.jib'
	id 'checkstyle'
	id 'jacoco'
	id 'com.avast.gradle.docker-compose' version '0.14.0'
	id 'com.diffplug.spotless'
	id 'com.github.spotbugs'
	id 'pmd'
	id 'org.sonarqube'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

apply from: "${rootDir}/gradle/openapi-tools/server.gradle"
apply from: "${rootDir}/gradle/code-quality.gradle"

def mapstructVersion = '1.5.2.Final'

configurations {
	compileOnly.extendsFrom annotationProcessor
}

dependencies {
	// Boiler plate dependencies:
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"
	compileOnly 'com.google.code.findbugs:annotations:3.0.1'
	compileOnly 'org.springframework.boot:spring-boot-devtools'

	implementation "org.mapstruct:mapstruct:${mapstructVersion}"
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.google.cloud:spring-cloud-gcp-starter-secretmanager:4.7.2'
	implementation 'org.apache.commons:commons-lang3:3.12.0'
	implementation 'io.nuvalence.dsgov:dsgov-auth:1.0.0'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2'
	implementation 'io.nuvalence.dsgov:dsgov-logging:1.0.0'

	// Database management
	implementation 'org.liquibase:liquibase-core'
	runtimeOnly 'org.postgresql:postgresql:42.5.1'
	runtimeOnly 'com.h2database:h2:2.1.214'

	// version bump to address known CVEs
	implementation 'org.yaml:snakeyaml:1.33'

	// Testing
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.avaje.composite:junit:5.1'
	testImplementation 'org.mockito:junit-jupiter:2.20.0'
	testImplementation 'org.mockito:mockito-core:4.4.0'
	testImplementation "org.mockito:mockito-inline:3.11.2"

	//cloud trace
	implementation 'com.google.cloud:spring-cloud-gcp-starter-trace:4.7.2'
}

test {
	useJUnitPlatform()
}

jacocoTestReport {
	reports {
		xml.required = true
		html.required = true
	}
}

sonarqube {
	properties {
		property 'sonar.dependencyCheck.htmlReportPath', 'build/reports/dependency-check-report.html'
		property 'sonar.dependencyCheck.jsonReportPath', 'build/reports/dependency-check-report.json'
		property 'sonar.dependencyCheck.summarize', true
	}
}

test.finalizedBy jacocoTestReport
tasks.named('sonarqube').configure {
	dependsOn test
}

tasks.withType(JavaCompile) {
	options.compilerArgs = [
			'-Amapstruct.suppressGeneratorTimestamp=true'
	]
}

bootRun {
	systemProperties = System.properties
	systemProperty 'spring.profiles.active', findProperty('profile') ?: 'local'
}
